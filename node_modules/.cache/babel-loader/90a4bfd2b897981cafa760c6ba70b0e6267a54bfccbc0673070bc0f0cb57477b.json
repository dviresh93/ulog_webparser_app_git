{"ast":null,"code":"var _jsxFileName = \"/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedContent, setSelectedContent] = useState('');\n  const [results, setResults] = useState({\n    battery_status_dict: null,\n    gps_status_dict: null,\n    accel_status_dict: null\n  });\n  const [customerLog, setCustomerLog] = useState(null);\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('customerLog', file);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) throw new Error('Network response was not ok.');\n      const data = await response.json();\n      setResults(data);\n    } catch (error) {\n      console.error('Error during fetch:', error);\n    }\n  };\n  const handleButtonClick = contentKey => {\n    setSelectedContent(contentKey);\n  };\n\n  // Dynamically generate buttons based on results keys\n  const tabs = Object.keys(results).filter(key => results[key] !== null).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleButtonClick(key),\n    children: key.replace('_', ' ')\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this));\n\n  // Display the selected content\n  const displayContent = selectedContent ? JSON.stringify(results[selectedContent], null, 2) : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        children: \"Upload and Process ULog File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: displayContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UgKpN6C1ajofs/mFJAtpSua3//8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","selectedContent","setSelectedContent","results","setResults","battery_status_dict","gps_status_dict","accel_status_dict","customerLog","setCustomerLog","handleFileUpload","event","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","error","console","handleButtonClick","contentKey","tabs","Object","keys","filter","key","map","onClick","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","displayContent","JSON","stringify","className","type","onChange","_c","$RefreshReg$"],"sources":["/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [selectedContent, setSelectedContent] = useState('');\n  const [results, setResults] = useState({\n    battery_status_dict: null,\n    gps_status_dict: null,\n    accel_status_dict: null,\n  });\n  const [customerLog, setCustomerLog] = useState(null);\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('customerLog', file);\n\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok.');\n\n      const data = await response.json();\n      setResults(data);\n    } catch (error) {\n      console.error('Error during fetch:', error);\n    }\n  };\n\n  const handleButtonClick = (contentKey) => {\n    setSelectedContent(contentKey);\n  };\n\n  // Dynamically generate buttons based on results keys\n  const tabs = Object.keys(results).filter(key => results[key] !== null).map((key) => (\n    <button key={key} onClick={() => handleButtonClick(key)}>\n      {key.replace('_', ' ')}\n    </button>\n  ));\n\n  // Display the selected content\n  const displayContent = selectedContent ? JSON.stringify(results[selectedContent], null, 2) : '';\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-section\">\n        <input type=\"file\" onChange={handleFileUpload} />\n        <button onClick={handleFileUpload}>Upload and Process ULog File</button>\n      </div>\n      <div className=\"sidebar\">\n        {tabs}\n      </div>\n      <div className=\"content\">\n        <pre>{displayContent}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}