{"ast":null,"code":"var _jsxFileName = \"/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js\",\n  _s2 = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport DataTable from './components/DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [results, setResults] = useState({});\n  const [fileName, setFileName] = useState('');\n  const handleFileUpload = async event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const formData = new FormData();\n      formData.append('customerLog', file);\n      try {\n        const response = await fetch('http://localhost:5000/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) throw new Error('Network response was not ok.');\n        const data = await response.json();\n        setResults(data);\n      } catch (error) {\n        console.error('Error during fetch:', error);\n      }\n    }\n  };\n  const renderTable = (title, data) => {\n    _s();\n    if (!data) return null;\n    const columns = React.useMemo(() => Object.keys(data).map(key => ({\n      Header: key,\n      accessor: key\n    })), [data]);\n    const tableData = React.useMemo(() => [data], [data]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        columns: columns,\n        data: tableData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  _s(renderTable, \"ZAtKeuuOPt9Ld61Q8FNwguPT+T0=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => document.getElementById('fileInput').click(),\n        children: \"Upload and Process ULog File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filename-display\",\n        children: [\"Uploaded File: \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: Object.keys(results).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: renderTable(key.replace(/_/g, ' '), results[key])\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"7JiRZJ6qxnpvklWrOhIqlaBB0eY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DataTable","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","results","setResults","fileName","setFileName","handleFileUpload","event","target","files","length","file","name","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","error","console","renderTable","title","columns","useMemo","Object","keys","map","key","Header","accessor","tableData","children","_jsxFileName","lineNumber","columnNumber","className","onClick","document","getElementById","click","type","id","onChange","style","display","replace","_c","$RefreshReg$"],"sources":["/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport DataTable from './components/DataTable';\n\nfunction App() {\n  const [results, setResults] = useState({});\n  const [fileName, setFileName] = useState('');\n\n  const handleFileUpload = async (event) => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const formData = new FormData();\n      formData.append('customerLog', file);\n\n      try {\n        const response = await fetch('http://localhost:5000/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) throw new Error('Network response was not ok.');\n\n        const data = await response.json();\n        setResults(data);\n      } catch (error) {\n        console.error('Error during fetch:', error);\n      }\n    }\n  };\n\n  const renderTable = (title, data) => {\n    if (!data) return null;\n\n    const columns = React.useMemo(\n      () => Object.keys(data).map(key => ({ Header: key, accessor: key })),\n      [data]\n    );\n\n    const tableData = React.useMemo(\n      () => [data],\n      [data]\n    );\n\n    return (\n      <div>\n        <h2>{title}</h2>\n        <DataTable columns={columns} data={tableData} />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-section\">\n        <button onClick={() => document.getElementById('fileInput').click()}>Upload and Process ULog File</button>\n        <input type=\"file\" id=\"fileInput\" onChange={handleFileUpload} style={{ display: 'none' }} />\n        {fileName && <span className=\"filename-display\">Uploaded File: {fileName}</span>}\n      </div>\n      <div className=\"content\">\n        {Object.keys(results).map((key) => (\n          <div key={key}>\n            {renderTable(key.replace(/_/g, ' '), results[key])}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}