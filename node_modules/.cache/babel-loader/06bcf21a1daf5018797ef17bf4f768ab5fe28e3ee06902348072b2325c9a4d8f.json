{"ast":null,"code":"var _jsxFileName = \"/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedContent, setSelectedContent] = useState('');\n  const [results, setResults] = useState({}); // Placeholder for actual results\n\n  // Placeholder function to simulate fetching results\n  const fetchResults = () => {\n    // Simulate fetching data and setting results\n    setResults({\n      output1: {\n        status: true\n      },\n      output2: {\n        status: false\n      }\n      // Add more outputs as needed\n    });\n  };\n\n  const handleButtonClick = contentKey => {\n    setSelectedContent(contentKey);\n  };\n\n  // Dynamically generate buttons based on results\n  const buttons = Object.keys(results).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleButtonClick(key),\n    children: key\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    fetchResults(); // Make sure this is called to populate results\n    console.log(results); // Check what data is in results\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: buttons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedContent && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JSON.stringify(results[selectedContent])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oPbVG5KvF5JgiRhjUu3tZuUh8s0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","selectedContent","setSelectedContent","results","setResults","fetchResults","output1","status","output2","handleButtonClick","contentKey","buttons","Object","keys","map","key","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to import the CSS file for styling\n\nfunction App() {\n  const [selectedContent, setSelectedContent] = useState('');\n  const [results, setResults] = useState({}); // Placeholder for actual results\n\n  // Placeholder function to simulate fetching results\n  const fetchResults = () => {\n    // Simulate fetching data and setting results\n    setResults({\n      output1: { status: true },\n      output2: { status: false },\n      // Add more outputs as needed\n    });\n  };\n\n  const handleButtonClick = (contentKey) => {\n    setSelectedContent(contentKey);\n  };\n\n  // Dynamically generate buttons based on results\n  const buttons = Object.keys(results).map((key) => (\n    <button\n      key={key}\n      onClick={() => handleButtonClick(key)}\n    >\n      {key}\n    </button>\n  ));\n\n  useEffect(() => {\n    fetchResults(); // Make sure this is called to populate results\n    console.log(results); // Check what data is in results\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-section\">\n        {/* Existing log file input */}\n      </div>\n      <div className=\"sidebar\">\n        {buttons}\n      </div>\n      <div className=\"main-content\">\n        {selectedContent && <div>{JSON.stringify(results[selectedContent])}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAD,UAAU,CAAC;MACTE,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAC;MACzBC,OAAO,EAAE;QAAED,MAAM,EAAE;MAAM;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED,MAAME,iBAAiB,GAAIC,UAAU,IAAK;IACxCR,kBAAkB,CAACQ,UAAU,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACV,OAAO,CAAC,CAACW,GAAG,CAAEC,GAAG,iBAC3CjB,OAAA;IAEEkB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAACM,GAAG,CAAE;IAAAE,QAAA,EAErCF;EAAG,GAHCA,GAAG;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIF,CACT,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACdS,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBiB,OAAO,CAACC,GAAG,CAACpB,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAP,QAAA,gBAClBnB,OAAA;MAAK0B,SAAS,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,eACNvB,OAAA;MAAK0B,SAAS,EAAC,SAAS;MAAAP,QAAA,EACrBN;IAAO;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNvB,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAP,QAAA,EAC1BhB,eAAe,iBAAIH,OAAA;QAAAmB,QAAA,EAAMQ,IAAI,CAACC,SAAS,CAACvB,OAAO,CAACF,eAAe,CAAC;MAAC;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CA9CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}