{"ast":null,"code":"var _jsxFileName = \"/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState(null);\n  const [results, setResults] = useState({}); // Placeholder for actual results\n\n  // Placeholder function to simulate fetching results\n  const fetchResults = () => {\n    // Simulate fetching data and setting results\n    setResults({\n      output1: {\n        status: true\n      },\n      output2: {\n        status: false\n      }\n      // Add more outputs as needed\n    });\n  };\n\n  const handleTabClick = tabKey => {\n    setActiveTab(tabKey);\n  };\n\n  // Dynamically generate tabs based on results\n  const tabs = Object.keys(results).map(key => {\n    const allTrue = Object.values(results[key]).every(val => val === true);\n    const tabColor = allTrue ? 'lightgreen' : 'lightred';\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: tabColor\n      },\n      onClick: () => handleTabClick(key),\n      children: key\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    fetchResults(); // Make sure this is called to populate results\n    console.log(results); // Check what data is in results\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: tabs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-display\",\n        children: activeTab && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: JSON.stringify(results[activeTab])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zs2d+7bsmm/MzO962+ad79bn1hw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","activeTab","setActiveTab","results","setResults","fetchResults","output1","status","output2","handleTabClick","tabKey","tabs","Object","keys","map","key","allTrue","values","every","val","tabColor","style","backgroundColor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Make sure to import the CSS file for styling\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(null);\n  const [results, setResults] = useState({}); // Placeholder for actual results\n\n  // Placeholder function to simulate fetching results\n  const fetchResults = () => {\n    // Simulate fetching data and setting results\n    setResults({\n      output1: { status: true },\n      output2: { status: false },\n      // Add more outputs as needed\n    });\n  };\n\n  const handleTabClick = (tabKey) => {\n    setActiveTab(tabKey);\n  };\n\n  // Dynamically generate tabs based on results\n  const tabs = Object.keys(results).map((key) => {\n    const allTrue = Object.values(results[key]).every((val) => val === true);\n    const tabColor = allTrue ? 'lightgreen' : 'lightred';\n    return (\n      <button\n        key={key}\n        style={{ backgroundColor: tabColor }}\n        onClick={() => handleTabClick(key)}\n      >\n        {key}\n      </button>\n    );\n  });\n\n  useEffect(() => {\n    fetchResults(); // Make sure this is called to populate results\n    console.log(results); // Check what data is in results\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-section\">\n        {/* Existing log file input */}\n      </div>\n      <div className=\"main-content\">\n        <div className=\"sidebar\">\n          {tabs}\n        </div>\n        <div className=\"result-display\">\n          {activeTab && <div>{JSON.stringify(results[activeTab])}</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAD,UAAU,CAAC;MACTE,OAAO,EAAE;QAAEC,MAAM,EAAE;MAAK,CAAC;MACzBC,OAAO,EAAE;QAAED,MAAM,EAAE;MAAM;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED,MAAME,cAAc,GAAIC,MAAM,IAAK;IACjCR,YAAY,CAACQ,MAAM,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACV,OAAO,CAAC,CAACW,GAAG,CAAEC,GAAG,IAAK;IAC7C,MAAMC,OAAO,GAAGJ,MAAM,CAACK,MAAM,CAACd,OAAO,CAACY,GAAG,CAAC,CAAC,CAACG,KAAK,CAAEC,GAAG,IAAKA,GAAG,KAAK,IAAI,CAAC;IACxE,MAAMC,QAAQ,GAAGJ,OAAO,GAAG,YAAY,GAAG,UAAU;IACpD,oBACElB,OAAA;MAEEuB,KAAK,EAAE;QAAEC,eAAe,EAAEF;MAAS,CAAE;MACrCG,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACM,GAAG,CAAE;MAAAS,QAAA,EAElCT;IAAG,GAJCA,GAAG;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKF,CAAC;EAEb,CAAC,CAAC;EAEFhC,SAAS,CAAC,MAAM;IACdS,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBwB,OAAO,CAACC,GAAG,CAAC3B,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAP,QAAA,gBAClB1B,OAAA;MAAKiC,SAAS,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC,eACN9B,OAAA;MAAKiC,SAAS,EAAC,cAAc;MAAAP,QAAA,gBAC3B1B,OAAA;QAAKiC,SAAS,EAAC,SAAS;QAAAP,QAAA,EACrBb;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACN9B,OAAA;QAAKiC,SAAS,EAAC,gBAAgB;QAAAP,QAAA,EAC5BvB,SAAS,iBAAIH,OAAA;UAAA0B,QAAA,EAAMQ,IAAI,CAACC,SAAS,CAAC9B,OAAO,CAACF,SAAS,CAAC;QAAC;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CArDQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}