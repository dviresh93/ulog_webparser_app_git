{"ast":null,"code":"var _jsxFileName = \"/home/viresh/Documents/repo/ulog_webparser_app_git/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport KeyValueTable from './components/KeyValueTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState({});\n  const [selectedContentKey, setSelectedContentKey] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n  const handleFileUpload = async event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const formData = new FormData();\n      formData.append('customerLog', file);\n      try {\n        const response = await fetch('http://localhost:5000/upload', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) throw new Error('Network response was not ok.');\n        const data = await response.json();\n        setResults(data);\n        setIsFileUploaded(true); // Set file uploaded state to true\n      } catch (error) {\n        console.error('Error during fetch:', error);\n      }\n    }\n  };\n  const handleButtonClick = contentKey => {\n    setSelectedContentKey(contentKey);\n  };\n  const getStatusColor = status => {\n    return status ? '#006400' : '#8b0000'; // Darker green and red\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => document.getElementById('fileInput').click(),\n        children: \"Upload and Process ULog File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"fileInput\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), fileName && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"filename-display\",\n        children: [\"Uploaded File: \", fileName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [isFileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-button\",\n          onClick: toggleSidebar,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hamburger-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hamburger-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hamburger-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), isSidebarOpen && Object.keys(results).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(key),\n          style: {\n            backgroundColor: getStatusColor(results[key].status)\n          },\n          className: selectedContentKey === key ? 'active' : '',\n          children: key.replace(/_/g, ' ')\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: selectedContentKey && /*#__PURE__*/_jsxDEV(KeyValueTable, {\n          data: results[selectedContentKey]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"14+XGl0a1JzRpj/osshov1+JpIc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","KeyValueTable","jsxDEV","_jsxDEV","App","_s","results","setResults","selectedContentKey","setSelectedContentKey","fileName","setFileName","isSidebarOpen","setIsSidebarOpen","isFileUploaded","setIsFileUploaded","handleFileUpload","event","target","files","length","file","name","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","error","console","handleButtonClick","contentKey","getStatusColor","status","toggleSidebar","className","children","onClick","document","getElementById","click","_jsxFileName","lineNumber","columnNumber","type","id","onChange","Object","keys","map","key","style","backgroundColor","replace","_c","$RefreshReg$"],"sources":["/home/viresh/Documents/repo/ulog_webparser_app_git/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport KeyValueTable from './components/KeyValueTable';\n\nfunction App() {\n  const [results, setResults] = useState({});\n  const [selectedContentKey, setSelectedContentKey] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isFileUploaded, setIsFileUploaded] = useState(false);\n\n  const handleFileUpload = async (event) => {\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      setFileName(file.name);\n      const formData = new FormData();\n      formData.append('customerLog', file);\n\n      try {\n        const response = await fetch('http://localhost:5000/upload', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) throw new Error('Network response was not ok.');\n\n        const data = await response.json();\n        setResults(data);\n        setIsFileUploaded(true); // Set file uploaded state to true\n      } catch (error) {\n        console.error('Error during fetch:', error);\n      }\n    }\n  };\n\n  const handleButtonClick = (contentKey) => {\n    setSelectedContentKey(contentKey);\n  };\n\n  const getStatusColor = (status) => {\n    return status ? '#006400' : '#8b0000'; // Darker green and red\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-section\">\n        <button onClick={() => document.getElementById('fileInput').click()}>Upload and Process ULog File</button>\n        <input type=\"file\" id=\"fileInput\" onChange={handleFileUpload} />\n        {fileName && <span className=\"filename-display\">Uploaded File: {fileName}</span>}\n      </div>\n      <div className=\"main-content\">\n        {isFileUploaded && (\n          <div className={`sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n            <button className=\"toggle-button\" onClick={toggleSidebar}>\n              <span className=\"hamburger-icon\"></span>\n              <span className=\"hamburger-icon\"></span>\n              <span className=\"hamburger-icon\"></span>\n            </button>\n            {isSidebarOpen && Object.keys(results).map((key) => (\n              <button\n                key={key}\n                onClick={() => handleButtonClick(key)}\n                style={{ backgroundColor: getStatusColor(results[key].status) }}\n                className={selectedContentKey === key ? 'active' : ''}\n              >\n                {key.replace(/_/g, ' ')}\n              </button>\n            ))}\n          </div>\n        )}\n        <div className=\"content\">\n          {selectedContentKey && <KeyValueTable data={results[selectedContentKey]} />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}