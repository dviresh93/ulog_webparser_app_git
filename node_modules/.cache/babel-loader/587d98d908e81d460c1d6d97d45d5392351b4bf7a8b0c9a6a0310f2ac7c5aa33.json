{"ast":null,"code":"var _jsxFileName = \"/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Collapsible from './Collapsible';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [output1, setOutput1] = useState('');\n  const [output2, setOutput2] = useState('');\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await response.json();\n    setOutput1(data.output1);\n    setOutput2(data.output2);\n  };\n  const handleOtherFileUpload = async event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // You can modify the URL and method as needed for the backend handling\n    await fetch('http://localhost:5000/other_upload', {\n      method: 'POST',\n      body: formData\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"customerLog\",\n        children: \"Customer Log File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"defaultLog\",\n        children: \"Default Log File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"customerLog\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"defaultLog\",\n        onChange: handleOtherFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), output1 && /*#__PURE__*/_jsxDEV(Collapsible, {\n      title: \"Output 1\",\n      content: output1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this), output2 && /*#__PURE__*/_jsxDEV(Collapsible, {\n      title: \"Output 2\",\n      content: output2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DGBmzWkgzyZcJet31lkZ6fkmzNw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Collapsible","jsxDEV","_jsxDEV","App","_s","output1","setOutput1","output2","setOutput2","handleFileUpload","event","file","target","files","formData","FormData","append","response","fetch","method","body","data","json","handleOtherFileUpload","className","children","style","display","justifyContent","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","title","content","_c","$RefreshReg$"],"sources":["/home/viresh/Documents/repo/ulog_parser_webapp/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Collapsible from './Collapsible';\n\nfunction App() {\n  const [output1, setOutput1] = useState('');\n  const [output2, setOutput2] = useState('');\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await response.json();\n    setOutput1(data.output1);\n    setOutput2(data.output2);\n  };\n\n  const handleOtherFileUpload = async (event) => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // You can modify the URL and method as needed for the backend handling\n    await fetch('http://localhost:5000/other_upload', {\n      method: 'POST',\n      body: formData,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n        <label for=\"customerLog\">Customer Log File:</label>\n        <label for=\"defaultLog\">Default Log File:</label>\n      </div>\n      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n        <input type=\"file\" id=\"customerLog\" onChange={handleFileUpload} />\n        <input type=\"file\" id=\"defaultLog\" onChange={handleOtherFileUpload} />\n      </div>\n        {output1 && <Collapsible title=\"Output 1\" content={output1} />}\n        {output2 && <Collapsible title=\"Output 2\" content={output2} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}